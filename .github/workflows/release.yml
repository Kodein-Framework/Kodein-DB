name: build and publish a release

on:
  release:
    types: [published]

jobs:
  create-staging-repository:
    name: Create staging repository
    runs-on: ubuntu-latest
    outputs:
      repository_id: ${{ steps.create.outputs.repository_id }}
    steps:
      - id: create
        uses: nexus-actions/create-nexus-staging-repo@v1.1
        with:
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_profile_id: ${{ secrets.SONATYPE_PROFILE_ID }}
          description: ${{ github.repository }}/${{ github.workflow }}#${{ github.run_number }}

  build-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Cached Konan
        uses: actions/cache@v2
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-konan-
      - name: Cached Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '8.0.265'
      - name: Setup Android SDK dir for MacOS
        if: matrix.os == 'macos-latest'
        run: echo sdk.dir=$ANDROID_HOME > local.properties
      - name: install default NDK for AGP
        if: matrix.os == 'macos-latest'
        run: $ANDROID_HOME/tools/bin/sdkmanager "ndk;21.3.6528147"
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Set up Windows
        if: matrix.os == 'windows-latest'
        run: |
          rm.exe "C:/WINDOWS/system32/bash.EXE"
          echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          choco install llvm
          echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          # https://youtrack.jetbrains.com/issue/KT-42485
          echo "LIBCLANG_DISABLE_CRASH_RECOVERY=1" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Setup kodein.local.properties
        run: cp .github/conf/kodein.local.${{ matrix.os }}.properties kodein.local.properties
      - name: Set up Gradle & Konan
        shell: bash
        run: ./gradlew
      # Host only for Ubuntu / Windows
      - name: Check (ubuntu / windows)
        if: matrix.os != 'macos-latest'
        run: ./gradlew hostOnlyTest
        shell: bash
      - name: Upload (ubuntu / windows)
        if: matrix.os != 'macos-latest'
        shell: bash
        run: ./gradlew hostOnlyPublish
      # Publish all on MacOS
      - name: Check (macos)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: ./gradlew check
      - name: Check Android (macos)
        if: matrix.os == 'macos-latest'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          ndk: 21.3.6528147
          cmake: 3.10.2.4988404
          script: ./gradlew connectedCheck
      - name: Upload (macos)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: ./gradlew publishAllPublicationsToOssrhStagingRepository

  drop-or-release:
    needs: [create-staging-repository, build-upload]
    runs-on: ubuntu-latest
    if: ${{ always() && needs.create-staging-repository.result == 'success' }}
    steps:
      - name: Discard
        if: ${{ needs.build-upload.result != 'success' }}
        uses: nexus-actions/drop-nexus-staging-repo@v1
        with:
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_repository_id: ${{ needs.create-staging-repository.outputs.repository_id }}
      - name: Release
        if: ${{ needs.build-upload.result == 'success' }}
        uses: nexus-actions/release-nexus-staging-repo@v1
        with:
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_repository_id: ${{ needs.create-staging-repository.outputs.repository_id }}